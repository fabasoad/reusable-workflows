---
on: # yamllint disable-line rule:truthy
  workflow_call:
    secrets:
      code-climate-test-reporter-id:
        description: Code Climate test reporter ID.
        required: true
    inputs:
      package-manager:
        description: |
          Used to specify a package manager for caching in the default directory.
          Supported values: npm, yarn, pnpm.
        required: false
        default: "yarn"
        type: string
      test-command:
        description: |
          Command that is specified in manifest file to run with package manager:
          <package-manager> run <test-command> (e.g. "yarn run test")
        required: false
        default: "test"
        type: string
      test-coverage-locations:
        description: |
          Locations to find code coverage as a multiline string. Each line should
          be of the form <location>:<type>. type can be any one of clover,
          cobertura, coverage.py, excoveralls, gcov, gocov, jacoco, lcov, lcov-json,
          simplecov, xccov. See examples here - https://github.com/paambaati/codeclimate-action?tab=readme-ov-file#example.
        required: false
        default: "${{ github.workspace }}/coverage/lcov.info:lcov"
        type: string
      report-to-cc:
        description: Either to report coverage results to Codeclimate or not.
        required: false
        default: "${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}"
        type: string
      node-version-file:
        description: |
          File containing the version Spec of the version to use. Examples:
          package.json, .nvmrc, .node-version, .tool-versions.
        required: false
        default: ".tool-versions"
        type: string

defaults:
  run:
    shell: sh

jobs:
  unit-tests-all:
    name: All
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4
      - name: Prepare metadata
        id: metadata
        env:
          INPUT_PACKAGE_MANAGER: "${{ inputs.package-manager }}"
        run: |
          cache_dependency_path="package-lock.json"
          if [ "${INPUT_PACKAGE_MANAGER}" = "yarn" ]; then
            cache_dependency_path="yarn.lock"
          elif [ "${INPUT_PACKAGE_MANAGER}" = "pnpm" ]; then
            cache_dependency_path="pnpm-lock.yaml"
          fi
          echo "cache-dependency-path=${cache_dependency_path}" >> "$GITHUB_OUTPUT"
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: "${{ inputs.node-version-file }}"
          cache: "${{ inputs.package-manager }}"
          cache-dependency-path: "${{ steps.metadata.outputs.cache-dependency-path }}"
      - name: Compile
        env:
          INPUT_PACKAGE_MANAGER: "${{ inputs.package-manager }}"
        run: ${INPUT_PACKAGE_MANAGER} install
      - name: Unit tests
        if: ${{ inputs.report-to-cc == 'false' }}
        env:
          INPUT_PACKAGE_MANAGER: "${{ inputs.package-manager }}"
          INPUT_TEST_COMMAND: "${{ inputs.test-command }}"
        run: ${INPUT_PACKAGE_MANAGER} run ${INPUT_TEST_COMMAND}
      - name: Unit tests with coverage
        if: ${{ inputs.report-to-cc == 'true' }}
        uses: paambaati/codeclimate-action@v8
        env:
          CC_TEST_REPORTER_ID: "${{ secrets.code-climate-test-reporter-id }}"
          INPUT_PACKAGE_MANAGER: "${{ inputs.package-manager }}"
        with:
          coverageCommand: ${{ inputs.package-manager }} run ${{ inputs.test-command }}
          coverageLocations: "${{ inputs.test-coverage-locations }}"
          debug: "true"
