---
on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      package-manager:
        description: |
          Used to specify a package manager for caching in the default directory.
          Supported values: npm, yarn, pnpm.
        required: false
        default: "yarn"
        type: string
      test-command:
        description: |
          Command that is specified in manifest file to run with package manager:
          <package-manager> run <test-command> (e.g. "yarn run test")
        required: false
        default: "test"
        type: string
      report-coverage:
        description: |
          Either to report coverage results to the connected 3rd party service
          or not.
        required: false
        default: ${{ github.event_name == 'push' && github.ref_name == github.event.repository.default_branch }}
        type: boolean
      node-version-file:
        description: |
          File containing the version Spec of the version to use. Examples:
          package.json, .nvmrc, .node-version, .tool-versions.
        required: false
        default: ".tool-versions"
        type: string
      testing-framework:
        description: |
          Testing framework. Possible values: jest.
        required: false
        default: "jest"
        type: string
      json-report-file:
        description: |
          File path of the JSON report. Relevant only if testing-framework is
          "jest".
        required: false
        default: "jest-report.json"
        type: string

defaults:
  run:
    shell: sh

jobs:
  unit-tests-all:
    name: All
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4
      - name: Prepare metadata
        id: metadata
        env:
          INPUT_PACKAGE_MANAGER: "${{ inputs.package-manager }}"
        run: |
          cache_dependency_path="package-lock.json"
          if [ "${INPUT_PACKAGE_MANAGER}" = "yarn" ]; then
            cache_dependency_path="yarn.lock"
          elif [ "${INPUT_PACKAGE_MANAGER}" = "pnpm" ]; then
            cache_dependency_path="pnpm-lock.yaml"
          fi
          echo "cache-dependency-path=${cache_dependency_path}" >> "$GITHUB_OUTPUT"
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: "${{ inputs.node-version-file }}"
          cache: "${{ inputs.package-manager }}"
          cache-dependency-path: "${{ steps.metadata.outputs.cache-dependency-path }}"
      - name: Install dependencies
        env:
          INPUT_PACKAGE_MANAGER: "${{ inputs.package-manager }}"
        run: ${INPUT_PACKAGE_MANAGER} install
      - name: Run tests
        env:
          INPUT_PACKAGE_MANAGER: "${{ inputs.package-manager }}"
          INPUT_TEST_COMMAND: "${{ inputs.test-command }}"
          # translation-action
          DEEPL_API_KEY: "${{ secrets.DEEPL_API_KEY }}"
          MYMEMORY_API_KEY: "${{ secrets.MYMEMORY_API_KEY }}"
        run: ${INPUT_PACKAGE_MANAGER} run ${INPUT_TEST_COMMAND}
      - name: Report coverage
        if: ${{ inputs.report-coverage }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Validate if JSON report exists
        if: ${{ inputs.testing-framework == 'jest' }}
        id: json-report-file
        env:
          INPUT_JSON_REPORT_FILE: "${{ inputs.json-report-file }}"
        run: |
          json_report_file_exists="false"
          if [ -f "${INPUT_JSON_REPORT_FILE}" ]; then
            json_report_file_exists="true"
          fi
          echo "exists=${json_report_file_exists}" >> "$GITHUB_OUTPUT"
      - name: Generate summary report
        if: ${{ steps.json-report-file.outputs.exists == 'true' }}
        id: generate-summary-report
        uses: im-open/process-jest-test-results@v2
        with:
          create-pr-comment: "false"
          create-status-check: "false"
          github-token: "${{ github.token }}"
          report-name: "Unit Tests Results"
          results-file: "${{ inputs.json-report-file }}"
          timezone: "Japan"
      - name: Print summary report
        if: ${{ steps.generate-summary-report.outputs.test-results-file-path != '' }}
        run: |
          report_file="${{ steps.generate-summary-report.outputs.test-results-file-path }}"
          cat "${report_file}" >> "$GITHUB_STEP_SUMMARY"
