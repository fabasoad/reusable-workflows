---
on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      code-scanning-run:
        description: Whether to run SAST analysis or not. Defaults to true.
        required: false
        default: true
        type: boolean
      code-scanning-languages:
        description: A comma-separated list of languages for SAST analysis.
        required: false
        default: "javascript"
        type: string
      sca-run:
        description: Whether to run SCA analysis or not. Defaults to true.
        required: false
        default: true
        type: boolean
      sca-path:
        description: Path to the directory for SCA.
        required: false
        default: "."
        type: string
      ghas-category:
        description: String used by GHAS for matching analyses.
        required: false
        default: "default"
        type: string

jobs:
  codeql:
    name: CodeQL
    if: inputs.code-scanning-run
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: "${{ inputs.code-scanning-languages }}"
      - name: Perform CodeQL Analysis
        id: codeql-analysis
        uses: github/codeql-action/analyze@v3
      - name: Upload to GHAS
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          category: "codeql-${{ inputs.ghas-category }}"
          sarif_file: "${{ steps.codeql-analysis.outputs.sarif-output }}"
  grype:
    name: Grype
    if: inputs.sca-run
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4
      - name: Scan project
        id: grype-scan
        uses: anchore/scan-action@v3
        with:
          by-cve: "true"
          path: "${{ inputs.sca-path }}"
      - name: Upload to GHAS
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          category: "grype-${{ inputs.ghas-category }}"
          sarif_file: "${{ steps.grype-scan.outputs.sarif }}"
