---
on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      target-branch:
        description: |
          Target branch name in front of which you want to validate changed files,
          e.g. main
        required: false
        default: ${{ github.event.repository.default_branch }}
        type: string
      pre-commit-config-path:
        description: "Path to pre-commit config file"
        required: false
        default: ".pre-commit-config.yaml"
        type: string
      run-on-all-files:
        description: "Whether to run on all files or not"
        required: false
        default: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
        type: boolean
      run-on-changed-files:
        description: "Whether to run on changed files or not"
        required: false
        default: ${{ github.event_name == 'pull_request' }}
        type: boolean
      skip-hooks:
        description: "Comma-separated list of hooks to skip"
        required: false
        default: ""
        type: string

defaults:
  run:
    shell: sh

jobs:
  pre-commit:
    name: ${{ inputs.run-on-all-files && 'All files' || 'Changed files' }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/fabasoad/pre-commit-container:latest
    steps:
      - name: Prepare skip hooks
        env:
          INPUT_SKIP_HOOKS: "${{ inputs.skip-hooks }}"
          DEFAULT_SKIP_HOOKS: "no-commit-to-branch, grype-dir, snyk-test"
        run: |
          skip_hooks="${DEFAULT_SKIP_HOOKS}"
          if [ -n "${INPUT_SKIP_HOOKS}" ]; then
            skip_hooks="${skip_hooks}, ${INPUT_SKIP_HOOKS}"
          fi
          echo "SKIP=${skip_hooks}" >> "$GITHUB_ENV"
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          set-safe-directory: true
      - name: Run pre-commit on changed files
        if: ${{ inputs.run-on-changed-files }}
        env:
          INPUT_PRE_COMMIT_CONFIG_PATH: ${{ inputs.pre-commit-config-path }}
          INPUT_TARGET_BRANCH: ${{ inputs.target-branch }}
        run: |
          pre-commit run --config "${INPUT_PRE_COMMIT_CONFIG_PATH}" --from-ref "origin/${INPUT_TARGET_BRANCH}" --to-ref "${GITHUB_SHA}" --show-diff-on-failure --hook-stage commit
          pre-commit run --config "${INPUT_PRE_COMMIT_CONFIG_PATH}" --from-ref "origin/${INPUT_TARGET_BRANCH}" --to-ref "${GITHUB_SHA}" --show-diff-on-failure --hook-stage push
      - name: Run pre-commit on all files
        if: ${{ inputs.run-on-all-files }}
        env:
          INPUT_PRE_COMMIT_CONFIG_PATH: ${{ inputs.pre-commit-config-path }}
        run: |
          pre-commit run --config "${INPUT_PRE_COMMIT_CONFIG_PATH}" --all-files --show-diff-on-failure --hook-stage commit
          pre-commit run --config "${INPUT_PRE_COMMIT_CONFIG_PATH}" --all-files --show-diff-on-failure --hook-stage push
