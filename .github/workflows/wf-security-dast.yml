---
on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      nuclei:
        description: Whether to run Nuclei or not. Defaults to true.
        required: false
        default: true
        type: boolean
      zap:
        description: Whether to run ZAP or not. Defaults to true.
        required: false
        default: true
        type: boolean
      nikto:
        description: Whether to run Nikto or not. Defaults to true.
        required: false
        default: false
        type: boolean
      ssllabs-scan:
        description: Whether to run ssllabs-scan or not. Defaults to true.
        required: false
        default: false
        type: boolean
      ssllabs-scan-email:
        description: Email to pass to sslabs-scan job. Defaults to "".
        required: false
        default: ""
        type: string
      target-url:
        description: Target URL to perform DAST analysis.
        required: false
        default: ""
        type: string
      ghas-category:
        description: String used by GHAS for matching analyses.
        required: false
        default: "default"
        type: string

jobs:
  nuclei:
    name: Nuclei
    if: inputs.nuclei && inputs.target-url != ''
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - name: Perform scanning
        uses: projectdiscovery/nuclei-action@v2.0.1
        with:
          target: "${{ inputs.target-url }}"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuclei-log
          path: nuclei.log
      - name: Upload to GHAS
        uses: github/codeql-action/upload-sarif@v3
        with:
          category: "nuclei-${{ inputs.ghas-category }}"
          sarif_file: nuclei.sarif
  zap:
    name: ZAP
    if: inputs.zap && inputs.target-url != ''
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Perform scanning
        uses: zaproxy/action-api-scan@v0.7.0
        with:
          target: "${{ inputs.target-url }}"
          allow_issue_writing: "false"
          fail_action: "true"
  nikto:
    # TODO: Cannot upload artifact
    name: Nikto
    if: inputs.nikto && inputs.target-url != ''
    runs-on: ubuntu-latest
    timeout-minutes: 30
    container:
      image: frapsoft/nikto:latest
      options: -w /temp
      volumes:
        - ${{ github.workspace }}:/__w/reusable-workflows/reusable-workflows
    steps:
      - name: Perform scanning
        env:
          INPUT_TARGET_URL: "${{ inputs.target-url }}"
        run: |
          nikto.pl -host "${INPUT_TARGET_URL}" -output report.htm
          pwd
          ls -la
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "nikto-report"
          path: "/__w/reusable-workflows/reusable-workflows/report.htm"
  ssllabs-scan:
    # TODO: Need to implement re-attempt
    name: ssllabs-scan
    if: inputs.ssllabs-scan && inputs.target-url != '' && inputs.ssllabs-scan-email != ''
    runs-on: ubuntu-latest
    steps:
      - name: Perform scanning
        id: scan
        env:
          INPUT_TARGET_URL: "${{ inputs.target-url }}"
          INPUT_EMAIL: "${{ inputs.ssllabs-scan-email }}"
        run: |
          report_path="${RUNNER_TEMP}/report.json"
          host=$(echo "${INPUT_TARGET_URL}" | cut -d '/' -f 3)
          curl --location "https://api.ssllabs.com/api/v4/analyze?host=${host}&maxAge=1&all=on" \
            --header "email: ${INPUT_EMAIL}" > report.json
          err_msg="$(jq -r 'select(.errors != null) | .errors | map(.message) | join(". ")' "${report_path}")"
          if [ -n "${err_msg}" ]; then
            echo "::error title=Error response::${err_msg}"
            exit 1
          fi
          status="$(jq -r '.status' "${report_path}")"
          if [ "${status}" != "READY" ]; then
            echo "::warning title=Report is not ready::Current status is \"${status}\""
            exit 1
          fi

          echo "Host: ${host}"
          jq -r '.endpoints[] | ("- IP Address: " + .ipAddress + ". Grade: " + .grade)' "${report_path}"

          echo "report-path=${report_path}" >> "$GITHUB_OUTPUT"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ssllabs-scan-report
          path: "${{ steps.scan.outputs.report-path }}"
